What to change every update:
- The Version in the title
- Make the 'back' using while
- Make the 'sorry the input'
- Check the line spacing
- Check the real one in cmder
- make the alt version with no colors



> All my unused and for testing codes

public static int averageOfThree(int a, int b, int c){
    return (a + b + c)/3;
    }

public static int areaOfRectangle(int length, int width){
    return length * width;
    }

public static double areaOfCircle(double radius){
        return 3.14 * radius * radius;
    }

public static double fahrenheitToCelcius(double fahrenheit){
        return (fahrenheit - 32) * 5 / 9;
    }

public static void vowelOrConsonant(String word){
        if(word.startsWith("A") || word.startsWith("I") || word.startsWith("U") || word.startsWith("E") || word.startsWith("O")){
            System.out.println("Its a vowel!");
        } else System.out.println("Its a consonant!");
    }

public static double areaOfEllipse(double xAxis, double yAxis){
    return 3.14 * xAxis * yAxis;
}

public static void printAsciiValue(char letter){
    int asciiValue = letter;
    System.out.println("The Ascii value of " + letter + " is " + asciiValue);
}

public static int quotientOrRemainder(String choose, int number1, int number2){
    if (choose == "quotient"){
        return number1 / number2;
    } else return number1 % number2;
}

public static void valueOfPrimitive(String dataType){
        if (dataType.equalsIgnoreCase("int")){
            System.out.println("The value of int is " + (Integer.SIZE));
        } else if (dataType.equalsIgnoreCase("float")) {
            System.out.println("The value of float is " + (Float.SIZE));
        } else if (dataType.equalsIgnoreCase("double")) {
            System.out.println("The value of double is " + (Double.SIZE));
        } else if (dataType.equalsIgnoreCase("short")) {
            System.out.println("The value of short is " + (Short.SIZE));
        } else if (dataType.equalsIgnoreCase("char")) {
            System.out.println("The value of char is " + (Character.SIZE));
        } else if (dataType.equalsIgnoreCase("long")) {
            System.out.println("The value of long is " + (Long.SIZE));
        } else if (dataType.equalsIgnoreCase("byte")) {
            System.out.println("The value of byte is " + (Byte.SIZE));
        }
    }

public static void showCharAll(String sentence) {
        for (int i = 0; i < sentence.length(); i++) {
            System.out.println(sentence.charAt(i));
        }
    }

public static void charAlphabetOrNot(char character){
        if (character == 'a' || character == 'b' || character == 'c' || character == 'd' || character == 'e' || character == 'f' || character == 'g'
                || character == 'h' || character == 'i' || character == 'j' || character == 'k' || character == 'l' || character == 'm'
                || character == 'n' || character == 'o' || character == 'p' || character == 'q' || character == 'r' || character == 's'
                || character == 't' || character == 'u' || character == 'v' || character == 'w' || character == 'x' || character == 'y' || character =='z'
                || character == 'A' || character == 'B' || character == 'C' || character == 'D' || character == 'E' || character == 'F' || character == 'G'
                || character == 'H' || character == 'I' || character == 'J' || character == 'K' || character == 'L' || character == 'M'
                || character == 'N' || character == 'O' || character == 'P' || character == 'Q' || character == 'R' || character == 'S'
                || character == 'T' || character == 'U' || character == 'V' || character == 'W' || character == 'X' || character == 'Y' || character =='Z'){
            System.out.println("It's an alphabet!");
        } else System.out.println("It's not an alphabet!");
    }

public static void oddOrEven(int num){
        if (num % 2 == 0){
            System.out.println("It's an even number !");
        } else System.out.println("It's an odd number!");
    }

public static void printAllInsideArray(String[] array){
        for (int i = 0; i < array.length; i++) {
            System.out.println(array[i]);
        }
    }

player player1 = new player("Hector", "Sword", "Chainmail Armor", 25, true);

        System.out.println(player1.age);

public static class player{
        String name;
        String weapon;
        String armor;
        int age;
        boolean hasKilledADragon;

        player(String name, String weapon, String armor, int age, boolean hasKilledADragon){
            this.name = name;
            this.weapon = weapon;
            this.armor = armor;
            this.age = age;
            this.hasKilledADragon = hasKilledADragon;
        }
    }

System.out.println("Its working");
        String aRed = "Yo";
        System.out.printf(ANSI_RED + "Yo" + ANSI_RESET);
        System.out.println();
        multiApp.typeWriterEffectColored("test this!", "white");
        System.out.println();
        multiApp.printColored("Test this print!", "red");
        System.out.println("\n");

import java.io.File;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JOptionPane;

class Simple1 extends Thread{
    public void run(){
        System.out.println("task one");
        String filepath = "Finding Sanctuary.wav";
        Music musicObject = new Music();
        musicObject.playMusic(filepath);
    }
}

class Simple2 extends Thread{
    public void run(){
        System.out.println("task two");
        for (int i = 0; i < 100; i++) {
            System.out.println("This Test!");
            multiApp.sleepTime(1000);
        }
    }
}

class TestMultitasking3{
    public static void main(String args[]){
        Simple1 t1=new Simple1();
        Simple2 t2=new Simple2();

        t1.start();
        t2.start();
    }
}
